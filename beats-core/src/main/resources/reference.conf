#
# The configuration for the FIWARE Beat
#
fiware {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The HTTP binding for the Fiware beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9090
  }
  broker = {
    #
    # The url of the Fiware Context Broker
    #
    brokerUrl = ""
    #
    # SSL/TLS support for send subscription requests
    # to the Fiware Context Broker
    #
    security = {
      #
      # The default configuration for subscription
      # requests does not support SSL/TLS. Set this
      # value to "true" to enable encryption
      #
      ssl = "false"
      #
      # The path to the keystore file
      #
      ksFile = ""
      #
      # The keystore type
      #
      ksType = ""
      #
      # The keystore password
      #
      ksPass = ""
      #
      # The keystore algorithm
      #
      ksAlgo = ""
      #
      # The path to the truststore file
      #
      tsFile = ""
      #
      # The truststore type
      #
      tsType = ""
      #
      # The truststore password
      #
      tsPass = ""
      #
      # The truststore algorithm
      #
      tsAlgo = ""
      #
      # The path to the certificate file of the
      # Certificate authority
      #
      caCertFile = ""
      #
      # The path to the certificate file
      #
      certFile = ""
      #
      # The path to the private key file
      #
      privateKeyFile = ""
      #
      # The password for the private key file
      #
      privateKeyFilePass = ""
    }
  }
  #
  # The security configuration for SSL/TLS the Akka-based
  # Http(s) server of this Fiware Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
  #
  # The list of subscriptions
  #
  subscriptions = []
}
#
# The configuration for the Fleet Beat
#
fleet {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The HTTP binding for the Fleet beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9090
  }
  receiver = {
    #
    # The parent file system folder path that contains
    # FleetDM log files
    #
    fleetFolder = ""
    #
    # The number of threads used by the FleetReceiver
    #
    numThreads = 1
    #
    # The polling interval of the FleetReceiver in seconds
    #
    pollingInterval = 1
    #
    # The buffer size of the FleetReceiver for file system
    # events
    #
    maxBufferSize = 1000
    #
    # The file name postfix used to identify FleetDM log
    # files
    #
    postfix = ".log"
    #
    # The maximum number of bytes of a file line
    #
    maxLineSize = 8192
    #
    # The name of the Akka actor system that defines the
    # backend of this receiver
    #
    systemName = "fleet-monitor"
  }
  #
  # The security configuration for SSL/TLS the Akka-based
  # Http(s) server of this Fleet Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
}
#
# The configuration for the Mitre (STIXv2.1) Beat
#
mitre {
    #
    # The local filesystem folder where MITRE ATTACK
    # data are located
    #
    folder = "/Users/krusche/Work/mitre-cti/attack-stix-data"
}
#
# The configuration for the OPC-UA Beat
#
opcua {
  #
  # The HTTP binding for the OPC-UA beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9090
  }
  addressCache = {
    maximumSize        = 1000
    expireAfterSeconds = 60
  }
  #
  # Meta information to create a self signed certificate;
  # this information must be provided, if no keystore exists
  #
  certificateInfo = {
    organization       = ""
    organizationalUnit = ""
    localityName       = ""
    countryCode        = ""
    dnsName            = ""
    ipAddress          = ""
  }
  keyStore = {
    certAlias       = "cert"
    fileName        = "works-opcua.pfx"
    keyStoreType    = "PKCS12"
    privateKeyAlias = "private-key"
  }
  #
  # Monitoring
  #
  monitoring = {
    bufferSize        = 100
    dataChangeTrigger = "StatusValueTimestamp"
    discardOldest     = false
    samplingInterval  = 0.0
  }
  receiver = {
    id = "works"

    endpointUrl = ""
    updateEndpointUrl = false

    connectTimeout = 5000
    requestTimeout = 5000

    keepAliveFailuresAllowed = 0
    subscriptionSamplingInterval = 0.0
    #
    # The number of threads used by the OpcUaReceiver
    #
    numThreads = 1

  }
  #
  # The (local) directory that contains security specific
  # information like certificates
  #
  securityDir  = "/Work/opc-ua/security"
  #
  # The security policies supported by Eclipse Milo
  #
  # - None
  # - Basic128Rsa15
  # - Basic256
  # - Basic256Sha256
  # - Aes128_Sha256_RsaOaep
  # - Aes256_Sha256_RsaPss
  #
  securityPolicy = "None"

  subscribeOnStartup = [
    "node/ns=2;s=ExampleDP_Float.ExampleDP_Arg1",
    "node/ns=2;s=ExampleDP_Text.ExampleDP_Text1",
    "path/Objects/Test/+/+",
  ]
  #
  # The user credentials to authenticate the
  # current user
  #
  userCredentials = {
    userName = ""
    userPass = ""
  }
  #
  # The security configuration for SSL/TLS
  # the Akka-based Http(s) server of this
  # OPC-UA Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
}
#
# The configuration for the OpenCTI Beat
#
opencti {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The HTTP binding for the OpenCTI beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9091
  }
  receiver = {
    #
    # The authentication token used to connect to the
    # OpenCTI Streams event server
    #
    authToken = ""
    #
    # The url of the OpenCTI SSE endpoint
    #
    endpoint = ""
    #
    # The number of threads used by the CTIReceiver
    #
    numThreads = 1
    #
    # SSL/TLS support for connections to the
    # OpenCTI streams endpoint
    #
    security = {
      #
      # The default configuration for subscription
      # requests does not support SSL/TLS. Set this
      # value to "true" to enable encryption
      #
      ssl = "false"
      #
      # The path to the keystore file
      #
      ksFile = ""
      #
      # The keystore type
      #
      ksType = ""
      #
      # The keystore password
      #
      ksPass = ""
      #
      # The keystore algorithm
      #
      ksAlgo = ""
      #
      # The path to the truststore file
      #
      tsFile = ""
      #
      # The truststore type
      #
      tsType = ""
      #
      # The truststore password
      #
      tsPass = ""
      #
      # The truststore algorithm
      #
      tsAlgo = ""
      #
      # The path to the certificate file of the
      # Certificate authority
      #
      caCertFile = ""
      #
      # The path to the certificate file
      #
      certFile = ""
      #
      # The path to the private key file
      #
      privateKeyFile = ""
      #
      # The password for the private key file
      #
      privateKeyFilePass = ""
    }

  }
  #
  # The security configuration for SSL/TLS
  # the Akka-based Http(s) server of this
  # OpenCTI Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
}
#
# The configuration for the Osquery Beat
#
osquery {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The Osquery Beat leverages REDIS as internal database
  # to manage Osquery node configurations
  #
  redis = {
    #
    # The endpoint of the REDIS instance; the current
    # configuration settings refer to a local instance
    #
    uri = "redis://localhost:6379"
    #
    # The size of the messages that is consumed at once
    # as a batch
    #
    batch = 1000
    #
    # The size of the time window in seconds to build
    # message chunks
    #
    duration = 1
    #
    # The number of parallel workers for processing
    #
    parallelism = 2
  }
  #
  # The security configuration for SSL/TLS the Akka-based
  # Http(s) server of this Osquery Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
  #
  # The configuration of a local Apache Spark REDIS
  # connector to use REDIS as a SQL-like database
  #
  spark = {
    #
    # The name of the Spark Application
    #
    name = "redis-sql"
    #
    # The master of the Spark Application
    #
    master = "local[*]"
    #
    # The host of the REDIS instance
    #
    host = "localhost"
    #
    # The port of the REDIS instance
    #
    port = 6379
    #
    # The password, if the Redis instance has
    # authentication enabled
    #
    password = ""
  }
}
#
# Works Beats offers multiple output channels. The current implementation
# supports MQTT and SSE publishing. The MQTT output channel distinguishes
# between Eclipse Paho for Mqtt v3.1 & v3.1.1, and, HiveMQ for Mqtt v3.1.1
# and Mqtt v5.
#
output {
  #
  # The output channel used by Works Beats. Either `mqtt` or `sse` is
  # accepted. The default channel is `sse`.
  #
  channel = "sse"
  #
  # The configuration of the MQTT output channel
  #
  mqtt = {
    #
    # The configuration of the MQTT client to use for
    # connecting to an MQTT broker; values are `hive`
    # and `paho`.
    #
    client = "paho"
    #
    # Configuration of the HiveMQ client
    #
    hive = {
      # The host of the HiveMQ broker
      mqttHost = ""
      # The port of the HiveMQ broker
      mqttPort = 0
      # The name of a registered user of the HiveMQ broker.
      # This parameter is optional. Without providing a user
      # name, no authentication is executed.
      mqttUser = ""
      # The password of the registered user
      mqttPass = ""
      #
      # The quality of service
      #
      # 0: QoS for at most once delivery according to the
      #    capabilities of the underlying network.
      #
      #    AT_MOST_ONCE
      #
      # 1: QoS for ensuring at least once delivery.
      #
      #    AT_LEAST_ONCE
      #
      # 2: QoS for ensuring exactly once delivery.
      #
      #    EXACTLY_ONCE
      #
      mqttQoS = 1
      #
      # The version of the Mqtt protocol: Either MQTT v3.1.1 (3) or v5 (5)
      #
      mqttVersion = 3
      #
      # SSL/TLS support to publish messages to the HiveMQ broker
      #
      mqttSsl = {
        #
        # The default configuration for subscription
        # requests does not support SSL/TLS. Set this
        # value to "true" to enable encryption
        #
        ssl = "false"
        #
        # The path to the keystore file
        #
        ksFile = ""
        #
        # The keystore type
        #
        ksType = ""
        #
        # The keystore password
        #
        ksPass = ""
        #
        # The keystore algorithm
        #
        ksAlgo = ""
        #
        # The path to the truststore file
        #
        tsFile = ""
        #
        # The truststore type
        #
        tsType = ""
        #
        # The truststore password
        #
        tsPass = ""
        #
        # The truststore algorithm
        #
        tsAlgo = ""
        #
        # The path to the certificate file of the
        # Certificate authority
        #
        caCertFile = ""
        #
        # The path to the certificate file
        #
        certFile = ""
        #
        # The path to the private key file
        #
        privateKeyFile = ""
        #
        # The password for the private key file
        #
        privateKeyFilePass = ""
      }
    }
    #
    # Configuration of the Paho Client
    #
    paho = {
      # The url of the Mosquitto broker
      mqttUrl = ""
      #
      # The unique client identifier used to connect to
      # the Mosquitto server
      #
      clientId = ""
      # The name of a registered user of the Mosquitto broker.
      # This parameter is optional. Without providing a user
      # name, no authentication is executed.
      mqttUser = ""
      # The password of the registered user
      mqttPass = ""
      #
      # The quality of service
      #
      # 0: QoS for at most once delivery according to the
      #    capabilities of the underlying network.
      #
      #    AT_MOST_ONCE
      #
      # 1: QoS for ensuring at least once delivery.
      #
      #    AT_LEAST_ONCE
      #
      # 2: QoS for ensuring exactly once delivery.
      #
      #    EXACTLY_ONCE
      #
      mqttQoS = 1
      #
      # The version of the MQTT protocol: Either MQTT v3.1 (3) or v3.1.1 (4)
      #
      mqttVersion = 4
      #
      # Keep alive interval for the Mqtt connection.
      #
      keepAlive = 120
      #
      # The connection timeout for the Mqtt connection
      #
      timeout = 120
      #
      # SSL/TLS support to publish messages to the Mosquitto broker
      #
      mqttSsl = {
        #
        # The default configuration for subscription
        # requests does not support SSL/TLS. Set this
        # value to "true" to enable encryption
        #
        ssl = "false"
        #
        # The path to the keystore file
        #
        ksFile = ""
        #
        # The keystore type
        #
        ksType = ""
        #
        # The keystore password
        #
        ksPass = ""
        #
        # The keystore algorithm
        #
        ksAlgo = ""
        #
        # The path to the truststore file
        #
        tsFile = ""
        #
        # The truststore type
        #
        tsType = ""
        #
        # The truststore password
        #
        tsPass = ""
        #
        # The truststore algorithm
        #
        tsAlgo = ""
        #
        # The path to the certificate file of the
        # Certificate authority
        #
        caCertFile = ""
        #
        # The path to the certificate file
        #
        certFile = ""
        #
        # The path to the private key file
        #
        privateKeyFile = ""
        #
        # The password for the private key file
        #
        privateKeyFilePass = ""
      }
    }
  }
}

#
# The configuration for the ThingsBoard Beat
#
thingsboard {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The HTTP binding for the ThingsBoard beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9092
  }
  #
  # The Mqtt Client configuration to access the ThingsBoard Server
  #
  mqtt = {
    #
    # The authentication token used to connect to the
    # ThingsBoard server
    #
    authToken = ""
    #
    # The url of the ThingsBoard (Mqtt) server
    #
    brokerUrl = "127.0.0.1:1883"
    #
    # The unique client identifier used to connect to
    # the ThingsBoard server
    #
    clientId = ""
    #
    # Keep alive interval for the Mqtt connection. The default value
    # is extracted from the ThingsBoard gateway, that also leverages
    # an Mqtt client to connect to the server
    #
    keepAlive = 120
    #
    # The number of threads used by the ThingsReceiver
    #
    numThreads = 1
    #
    # User name and password used to connect to the
    # ThingsBoard server
    #
    userName = ""
    userPass = ""
    #
    # The connection timeout for the Mqtt connection
    #
    timeout = 120
    #
    # SSL/TLS support for send subscription requests
    # to the Mqtt Broker
    #
    security = {
      #
      # The default configuration for subscription
      # requests does not support SSL/TLS. Set this
      # value to "true" to enable encryption
      #
      ssl = "false"
      #
      # The path to the keystore file
      #
      ksFile = ""
      #
      # The keystore type
      #
      ksType = ""
      #
      # The keystore password
      #
      ksPass = ""
      #
      # The keystore algorithm
      #
      ksAlgo = ""
      #
      # The path to the truststore file
      #
      tsFile = ""
      #
      # The truststore type
      #
      tsType = ""
      #
      # The truststore password
      #
      tsPass = ""
      #
      # The truststore algorithm
      #
      tsAlgo = ""
      #
      # The path to the certificate file of the
      # Certificate authority
      #
      caCertFile = ""
      #
      # The path to the certificate file
      #
      certFile = ""
      #
      # The path to the private key file
      #
      privateKeyFile = ""
      #
      # The password for the private key file
      #
      privateKeyFilePass = ""
    }
  }
  #
  # The security configuration for SSL/TLS
  # the Akka-based Http(s) server of this
  # ThingsBoard Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
}
#
# The configuration for the Zeek Beat
#
zeek {
  actor = {
    #
    # Timeout in seconds
    #
    timeout = 5
    #
    # Parameters to control the handling of failed child actors:
    # it is the number of retries within a certain time window.
    #
    # The supervisor strategy restarts a child up to 10 restarts
    # per minute. The child actor is stopped if the restart count
    # exceeds maxRetries during the withinTimeRange duration.
    #
    maxRetries = 10
    #
    # Time range in minutes
    #
    timeRange = 1
    #
    # Child actors are defined leveraging a RoundRobin pool with a
    # dynamic resizer. The boundaries of the resizer are defined
    # below
    #
    lower = 2
    upper = 100
    #
    # The number of instances for the RoundRobin pool
    #
    instances = 50
  }
  #
  # The HTTP binding for the Zeek beat; this configuration must
  # be adapted to the current environment
  #
  binding = {
    host = "127.0.0.1"
    port = 9090
  }
  receiver = {
    #
    # The unique identifier that distinguishes this
    # Zeek sensor from all other Zeek sensors
    #
    zeekIdent = ""
    #
    # The parent file system folder path that contains
    # Zeek log files
    #
    zeekFolder = ""
    #
    # The number of threads used by the ZeekReceiver
    #
    numThreads = 1
    #
    # The polling interval of the ZeekReceiver in seconds
    #
    pollingInterval = 1
    #
    # The buffer size of the ZeekReceiver for file system
    # events
    #
    maxBufferSize = 1000
    #
    # The file name postfix used to identify Zeek log
    # files
    #
    postfix = ".log"
    #
    # The maximum number of bytes of a file line
    #
    maxLineSize = 8192
    #
    # The name of the Akka actor system that defines the
    # backend of this receiver
    #
    systemName = "zeek-monitor"
  }
  #
  # The security configuration for SSL/TLS
  # the Akka-based Http(s) server of this
  # Zeek Beat
  #
  security = {
    #
    # The default configuration for subscription
    # requests does not support SSL/TLS. Set this
    # value to "true" to enable encryption
    #
    ssl = "false"
    #
    # The path to the keystore file
    #
    ksFile = ""
    #
    # The keystore type
    #
    ksType = ""
    #
    # The keystore password
    #
    ksPass = ""
    #
    # The keystore algorithm
    #
    ksAlgo = ""
    #
    # The path to the truststore file
    #
    tsFile = ""
    #
    # The truststore type
    #
    tsType = ""
    #
    # The truststore password
    #
    tsPass = ""
    #
    # The truststore algorithm
    #
    tsAlgo = ""
    #
    # The path to the certificate file of the
    # Certificate authority
    #
    caCertFile = ""
    #
    # The path to the certificate file
    #
    certFile = ""
    #
    # The path to the private key file
    #
    privateKeyFile = ""
    #
    # The password for the private key file
    #
    privateKeyFilePass = ""
  }
}
